<?php

/**
 * @file
 * Contains df_tools_scheduled_updates.module.
 */

/**
 * Implements hook_modules_installed().
 */
function df_tools_scheduled_updates_modules_installed(array $modules) {
  // Don't do anything during config sync.
  if (\Drupal::isConfigSyncing()) {
    return;
  }

  // Grant 'Reviewers' the ability to schedule content updates.
  if (in_array('df_tools_user', $modules)) {
    $reviewer_permissions = [
      'view scheduled update entities',
      'create multiple_node_embargo scheduled updates',
      'delete any multiple_node_embargo scheduled updates',
      'delete own multiple_node_embargo scheduled updates',
      'edit any multiple_node_embargo scheduled updates',
      'edit own multiple_node_embargo scheduled updates',
      'create node_embargo scheduled updates',
      'delete any node_embargo scheduled updates',
      'delete own node_embargo scheduled updates',
      'edit any node_embargo scheduled updates',
      'edit own node_embargo scheduled updates',
      'schedule publishing of nodes',
      'view scheduled content',
    ];
    user_role_grant_permissions('reviewer', $reviewer_permissions);
  }
}

/**
 * Implements hook_form_alter().
 */
function df_tools_scheduled_updates_form_alter(array &$form) {
  if (isset($form['scheduled_update']) && !\Drupal::currentUser()->hasPermission('schedule publishing of nodes')) {
    $form['scheduled_update']['#access'] = FALSE;
  }
}

/**
 * Implements hook_module_implements_alter().
 */
function df_tools_scheduled_updates_module_implements_alter(&$implementations, $hook) {
  // Disable block initialization/inheritance for themes enabled after Lightning
  // is installed in order to prevent blocks associated with the profile from
  // bleeding over into scenarios.
  if ($hook === 'field_widget_form_alter' && isset($implementations['lightning_scheduler'])) {
    unset($implementations['lightning_scheduler']);
  }
}
